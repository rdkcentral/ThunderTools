/*
 * If not stated otherwise in this file or this component's LICENSE file the
 * following copyright and licenses apply:
 *
 * Copyright {{YEAR_OF_GENERATION}} [PLEASE ADD COPYRIGHT NAME!]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{{HEADER_INCLUDES}}

namespace Thunder {
namespace Plugin {

    class {{PLUGIN_NAME}}Implementation {{HEADER_INHERITED_CLASS}} {
    public:
        {{PLUGIN_NAME}}Implementation(const {{PLUGIN_NAME}}Implementation&) = delete;
        {{PLUGIN_NAME}}Implementation& operator=(const {{PLUGIN_NAME}}Implementation&) = delete;
        {{PLUGIN_NAME}}Implementation({{PLUGIN_NAME}}Implementation&&) = delete;
        {{PLUGIN_NAME}}Implementation& operator=({{PLUGIN_NAME}}Implementation&&) = delete;

        {{PLUGIN_NAME}}Implementation()
        {{HEADER_CONSTRUCTOR}} 
        {   
        }
        ~{{PLUGIN_NAME}}Implementation() override = default;
        
    {{CONFIG_CLASS}}
    public:

        BEGIN_INTERFACE_MAP({{PLUGIN_NAME}}Implementation)
        {{HEADER_INTERFACE_ENTRY}}
        END_INTERFACE_MAP
    
        {{HEADER_INHERITED_METHOD}}
    private:
        {{HEADER_USING_CONTAINER}}

        {{HEADER_NOTIFY}}
        {{HEADER_MEMBERS}}
    };
    
    SERVICE_REGISTRATION({{PLUGIN_NAME}}Implementation, 1, 0)
} // Plugin
} // Thunder